https://blog.pusher.com/why-vuejs-laravel/

<countdown until="Feb 27, 2020"></countdown>

<template>
    <div class="countdown__container">
        <div v-if="finished" v-text="expiredText"></div>
        <div v-else class="flex">
            <div>
                <div>{{ remaining.days }}</div>
                <div>Days</div>
            </div>

            <div>
                <div>{{ remaining.hours }}</div>
                <div>Hours</div>
            </div>
            <div>
                <div>{{ remaining.minutes }}</div>
                <div>Minutes</div>
            </div>
            <div>
                <div>{{ remaining.seconds }}</div>
                <div>Seconds</div>
            </div>
        </div>
    </div>
</template>

<script>
    import moment from 'moment';

    export default {
        props: {
            until: String,
            expiredText: { default: 'This event has finished' }
        },
        data () {
            return { now: new Date() };
        },
        created () {
            this.refreshEverySecond();
        },
        computed: {
            finished () {
                return this.remaining.total <= 0;
            },
            remaining () {

                let remaining = moment.duration(Date.parse(this.until) - this.now);

                if (remaining <= 0) this.$emit('finished');

                return {
                    total: remaining,
                    years: this.pad(remaining.years(),2),
                    months: this.pad(remaining.months(),2),
                    days: this.pad(remaining.days(),2),
                    hours: this.pad(remaining.hours(),2),
                    minutes: this.pad(remaining.minutes(),2),
                    seconds: this.pad(remaining.seconds(),2)
                };
            }
        },
        methods: {

           pad(num, size) {
                var s = "000000000" + num;
                return s.substr(s.length-size);
            },
            refreshEverySecond () {
                let interval = setInterval(() => this.now = new Date(), 1000);
                this.$on('finished', () => clearInterval(interval));
            }
        }
    }
</script>
<style lang="scss">
</style>

https://vuejs.org/v2/guide/transitions.html

https://codesandbox.io/s/y3504yr0l1?from-embed
http://vee-validate.logaretm.com/v2/examples/radio.html
https://vuejs.org/v2/guide/forms.html#Radio


https://codepen.io/shooby83/pen/JQyRao

<div id="wrap">
  <div class="tabs">
  <div id="tab1" class="tab selected">Tab 1</div>
  <div id="tab2" class="tab">Tab 2</div>
  <div id="tab3" class="tab">Tab 3</div>
  <div id="tab4" class="tab">Tab 4</div>
  </div>

  <div id="container">
    <div id="slide" class="">
      <div id="first" class="box">Check this Out</div>
      <div id="second" class="box">TAB TWO</div>
      <div id="third" class="box">TAB THREE</div>
      <div id="four" class="box">TAB FOUR</div>
    </div>
  </div>
</div>


body, html {
  margin: 0px;
  padding: 0px;
  width: 100%;
  height:100%;
  text-align: center;
}

#wrap {
  width: 100%;
  margin: 0 auto;
  margin-top: 10px;
}

.selected {
    border-bottom: 1px solid red;
}
.tabs {
  display: flex;
}

#container {
    position: relative;
    max-width: 1280px;
    min-height: 25rem;
    overflow: hidden;
}

.box {
    display: inline-block;
    white-space: nowrap;
    position: absolute;
    width: 100%;
  height: 100%;
    text-align: center;
}

#first {
    top: 0px;
    left: 0px;
}

#second {
    top: 0px;
    left: 100%;
}

#third {
    top: 0px;
    left: 200%;
}

#four {
    top: 0px;
    left: 300%;
}

#slide {
    transition: transform 1s ease-in-out 0s;
}

.move-to-second {
    transform: translateX(-100%);
}

.move-to-third {
    transform: translateX(-200%);
}

.move-to-first {
    transform: translateX(0); 
}

.move-to-four {
    transform: translateX(-300%); 
}

$("#tab1").click(moveToFirst);
$("#tab2").click(moveToSecond);
$("#tab3").click(moveToThird);
$("#tab4").click(moveToFour);

function moveToFirst() {
    $("#slide").attr('class', 'move-to-first');
    $(".tab").attr('class', 'tab');
    $("#tab1").attr('class', 'tab selected');
}

function moveToSecond() {
    $("#slide").attr('class', 'move-to-second');
    $(".tab").attr('class', 'tab');
    $("#tab2").attr('class', 'tab selected');
}

function moveToThird() {
     $("#slide").attr('class', 'move-to-third');
    $(".tab").attr('class', 'tab');
    $("#tab3").attr('class', 'tab selected');
}

function moveToFour() {
     $("#slide").attr('class', 'move-to-four');
    $(".tab").attr('class', 'tab');
    $("#tab4").attr('class', 'tab selected');
}

https://codepen.io/sianuro/pen/Kvnog
